package controller;

import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import view.Client_View_Controller;

public class ClientController implements Runnable {

	private String hostname;
	private int port;
	private Client_View_Controller clientViewController;
	private String username;
	
	private ReadThread readThread;
	private WriteThread writeThread;
	private Thread t1;
	
	public ClientController(String hostname, int port, Client_View_Controller clientViewController, String username) {
		this.hostname = hostname;
		this.port = port;
		this.clientViewController = clientViewController;
		this.username = username;
	}

	@Override
	public void run() {
		try {
			Socket socket = new Socket(hostname, port);
			clientViewController.appendText("Connected to server!");
			//Read thread
			//Always have to be reading from server
			//Write Thread
			//Not always writing to server
			readThread = new ReadThread(socket, this, clientViewController, username);
			t1 = new Thread(readThread);
			t1.setDaemon(true);
			t1.start();
			
			writeThread = new WriteThread(socket, this, viewController, userName);
			
			
		} catch (UnknownHostException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		
		
	}

}
